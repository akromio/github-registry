spec: v1.0
desc: Catalog for working with GitHub Pages.

dataset:
  - const: src
    desc: Dir where the source templates are.
    value: $(__dir)/_$(__catalogName)
    tags: [hidden]
  
  - const: dst
    desc: Local directory where to save the files.
    value: $(workDir)
  
  - const: jekyllQ
    desc: Questions for the creation of a Jekyll website.
    tags: [hidden, questions]
    value:
      - select: websiteDir
        options: [/, /docs]
        defaultValue: /
      - input: websiteTitle
      - input: websiteDesc
      - input: websiteUrl
      - input: websiteBase
        defaultValue: /
      - select: jekyllTheme
        options: [leap-day, minima]
        defaultValue: minima
  
  - const: configQ
    desc: Questions for the creation of _config.yaml
    tags: [hidden, questions]
    value:
      - select: websiteDir
        options: [/, /docs]
        defaultValue: /
      - input: websiteTitle
      - input: websiteDesc
      - input: websiteUrl
      - input: websiteBase
        defaultValue: /
      - select: theme
        options: [jekyll/minima, pages-theme/leap-day]
        defaultValue: jekyll/minima
      - select: plugins
        multiple: true
        options: [jekyll-feed, jekyll-sitemap]
        defaultValue: [jekyll-sitemap, jekyll-remote-theme]
      - confirm: gemfile
        defaultValue: true
  
  - const: jekyllDataFileQ
    desc: Questions for the creation of a Jekyll data file.
    tags: [hidden, questions]
    value:
      - input: fileName
        title: File name (w/o extension)
  
  - const: jekyllFrontMatterQ
    desc: Questions for building a front matter.
    tags: [hidden, questions]
    value:
      - input: title
      - input: layout
      - input: permalink
  
  - const: workflowQ
    desc: Questions for generating a GitHub workflow
    tags: [hidden, questions]
    value:
      - input: workflowName

defaultJobName: jekyll
jobs:
  - macro: jekyll
    title: Create a Jekyll website
    ini:
      - quiet: $answers = inquire $(jekyllQ) $(answers)
    dataset: [item, content]
    steps:
      - fs.createDir $(dst)/$(answers.websiteDir)
      - fs.createDir $(dst)/_data
      - fs.createDir $(dst)/_layouts
      - jekyll-config-file
  
  - macro: config
    title: Create the _config.yaml file
    ini:
      - quiet: $answers = inquire $(configQ) $(answers)
    dataset: [item, content]
    steps:
      - quiet: $item = cr.getItem $(src)/_config.yaml.hbs
      - quiet: $content = hbs.render $(item.value) $(answers)
      - fs.createDir $(dst)/$(answers.websiteDir)
      - file.write $(content) $(dst)/$(answers.websiteDir)/_config.yaml

      - if: answers.gemfile
        quiet: $item = cr.getItem $(src)/Gemfile.hbs
      - if: answers.gemfile
        quiet: $content = hbs.render $(item.value) $(answers)
      - if: answers.gemfile
        step: file.write $(content) $(dst)/$(answers.websiteDir)/Gemfile

  - macro: jekyll-data-file
    title: Create Jekyll data file
    ini:
      - quiet: $answers = inquire $(jekyllDataFileQ) $(answers)
    dataset: [item, content]
    steps:
      - fs.createDir $(dst)/_data

      - quiet: $item = cr.getItem $(src)/_data/data-file.yaml.hbs
      - quiet: $content = hbs.render $(item.value) $(answers)
      - file.write $(content) $(dst)/_data/$(answers.fileName).yaml
  
  - macro: jekyll-front-matter
    title: Build a Jekyll front matter
    ini:
      - quiet: $answers = inquire $(jekyllFrontMatterQ) $(answers)
    dataset: [item, content]
    steps:
      - quiet: $item = cr.getItem $(src)/frontMatter.hbs
      - log: hbs.render $(item.value) $(answers)

  - macro: workflow
    title: Create a GitHub Actions workflow for publishing website on GitHub Pages
    ini:
      - quiet: $answers = inquire $(workflowQ) $(answers)
    dataset: [item, content]
    steps:
      - fs.createDir $(dst)/.github/workflows

      - quiet: $item = cr.getItem $(src)/workflows/workflow.yaml.hbs
      - quiet: $content = hbs.render $(item.value) $(answers)
      - file.write $(content) $(dst)/.github/workflows/github-pages.yaml